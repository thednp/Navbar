// BOOTSTRAP MIXINS

$dark_navbar_background: #343a40;

// bootstrap navbar style
@mixin navbar-style-bs {
  .navbar-light .open-mobile {
    > a > .parent-toggle,
    > span > .parent-toggle {
      background: rgba(0,0,0,.15);
    }
  }
  .navbar-dark .open-mobile {
    > a > .parent-toggle,
    > span > .parent-toggle {
      background: rgba(255,255,255,.15);
    }
  }
  @media (min-width: $responsive_breakpoint) {
    // set LVL1 subnav box-shadow
    .navbar-nav li > .subnav {
      @include set-metric("box-shadow",$subnav_shadow); }
    .navbar-light {
      .subnav {
        background: #fff;
      }
      .navbar-nav li {
        li.open, li:hover { // hover
          > a.nav-link {
            // color: $subnav_item_hover_color;
            background: rgba(0,0,0,.15);
          }
        }
      }
    }
    .navbar-dark {
      .subnav {
        background: lighten($dark_navbar_background,5%);
      }
      .navbar-nav li {
        li.open, li:hover { // hover
          > a.nav-link {
            // color: $subnav_item_hover_background;
            background: rgba(255,255,255,.15);
          }
        }

      }
    }
    // lvl 2 active
    .navbar .navbar-nav li {
      li.active, li.active:hover { // active
        > a.nav-link {
          color: $subnav_item_active_color;
          background: $subnav_item_active_background;
        }
      }
    }
  }
}

@mixin nav-layout-bs() {
  // set navbar padding
  .navbar {
    @include set-metric("padding",$navbar_padding);
  }

  // mobile view visibility
  .subnav,
  .subnav span + ul,
  .subnav span + div,
  .parent-icon {display: none;}
  li.open-mobile {
    > span + div,
    > span + ul,
    > .subnav {display: block;}
  }

  // menu icons
  @include navbar-icon();
  .menu-icon + span {
    flex: auto;
    margin-left: $item_vertical_spacing;
  }
  .parent-toggle {border-radius: $base_radius;}
  span > .parent-toggle {
    cursor: pointer;
  }
  // mobile view menu tree highlight padding
  ul.subnav,
  div.subnav ul {
    padding: 0 0 0 $item_horizontal_spacing;
  }
  // general menu layout
  .navbar-nav {
    li {
      position: relative;
      list-style: none;
      // general item styling
      // > a, .nav-link {
      .nav-link {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        text-decoration: none;
        span {
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
      }
    }
  }
  @media (min-width: $responsive_breakpoint) {
    // desktop view visibility
    .parent-toggle { display: none; }
    .parent-icon { display: flex; }
    .subnav span + div,
    .subnav span + ul {
      display: block;
    }
    // set subnav position
    .subnav {
      position: absolute;
    }
    // reset menu tree highlight padding
    ul.subnav,
    div.subnav ul {
      padding: 0;
    }
    // set submenu width
    ul.subnav { width: $subnav_width; }
    div.subnav { min-width: $subnav_larger_width; }

    // determine offset
    $offset: 0;
    @if type-of($navbar_padding) == "number" and real-size($navbar_padding) > 0 {
      $offset: $navbar_padding;
    } @else if type-of($navbar_padding) == "list" and length($navbar_padding) == 2 {
      $offset: nth($navbar_padding,1);
    } @else if type-of($navbar_padding) == "list" and length($navbar_padding) > 2 {
      $offset: nth($navbar_padding,3);
    }
    // determine margin
    $consolidated_margin: 0;
    @if type-of($subnav_margin) == "number" {
      $consolidated_margin: sum-size($subnav_margin, $offset) 0 0;
    } @else if type-of($subnav_margin) == "list" and length($subnav_margin) == 2 {
      $mt: sum-size(nth($subnav_margin,1), $offset);
      $mb: nth($subnav_margin,1);
      $mh: nth($subnav_margin,2);
      $consolidated_margin: $mt $mh $mb;
    } @else if type-of($subnav_margin) == "list" and length($subnav_margin) == 3 {
      $mt: sum-size(nth($subnav_margin,1), $offset);
      $mb: nth($subnav_margin,3);
      $mh: nth($subnav_margin,2);
      $consolidated_margin: $mt $mh $mb;
    } @else if type-of($subnav_margin) == "list" and length($subnav_margin) == 4 {
      $mt: sum-size(nth($subnav_margin,1), $offset);
      $mh: nth($subnav_margin,2);
      $mb: nth($subnav_margin,3);
      $ml: nth($subnav_margin,4);
      $consolidated_margin: $mt $mh $mb $ml;
    }
    // set margin and padding
    .navbar-nav > li > .subnav {
      @include set-metric("margin",$consolidated_margin); // includes offset offset
      @include set-metric("padding",$subnav_padding);
    }
  }
}

@mixin main-menu-bs() {
  @media (min-width: $responsive_breakpoint) {
    .navbar-nav {
      li {
        > .subnav {
          top: -99999em;
          display: block;
          opacity: 0;
          transition: transform .5s ease, opacity .4s ease;
          transform: translate(0,-10px);
        }

        li > .subnav { transform: translate(-10px); }
        li.open-position > .subnav { top: 0; left: 100%; }
      }

      li.open-position > .subnav { top: 100%; left: 0; z-index: $subnav_zindex; }
      li.open > .subnav { opacity: 1; transform: translate(0); }
    }
  }
}
